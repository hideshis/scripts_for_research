<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name></name>
        <class confirmed="no">
            <name>B[]</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.ByteArrayInputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toByteArray()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Closeable</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</inbound>
            <feature confirmed="no">
                <name>java.io.Closeable.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheDir</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheDir(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.dispose()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getFile()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.length()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.cacheDir</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.io.File, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.delete()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.dispose()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.length()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.length()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FilterInputStream</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream</inbound>
            <feature confirmed="no">
                <name>java.io.FilterInputStream.FilterInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FilterInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.readResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException</inbound>
            <feature confirmed="no">
                <name>java.io.IOException.IOException()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.IOException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.combinedStream</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.instream</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectInputStream</name>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.readObject()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.writeObject(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <feature confirmed="no">
                <name>java.io.OutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.RandomAccessFile</name>
            <feature confirmed="no">
                <name>java.io.RandomAccessFile.RandomAccessFile(java.io.File, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.RandomAccessFile.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.RandomAccessFile.getChannel()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.RandomAccessFile.length()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.SequenceInputStream</name>
            <feature confirmed="no">
                <name>java.io.SequenceInputStream.SequenceInputStream(java.io.InputStream, java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Serializable</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.UnsupportedEncodingException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.Appendable</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <feature confirmed="no">
                <name>java.lang.Character.isDigit(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isLetterOrDigit(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.getClassLoader()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CloneNotSupportedException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.clone()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Cloneable</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.valueOf(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CacheResponseStatus(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.RequestProtocolError(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.valueOf(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <feature confirmed="no">
                <name>java.lang.Error.Error(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.increaseErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalStateException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setReasonPhrase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusCode(int)</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureNotConsumed()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InterruptedException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.parseLong(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString(long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.min(long, long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.pow(double, double)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchFieldError</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <feature confirmed="no">
                <name>java.lang.NumberFormatException.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.values()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.clone()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.notGetOrHeadRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.addHeader(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeader(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.equals(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.HeaderConstants()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.InputLimit(long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.CacheEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.CacheKeyGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.CacheValidityPolicy()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.CachingHttpClients()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.ConditionalRequestBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.DefaultHttpCacheEntrySerializer()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.HeapResource(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.HeapResourceFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.IOUtils()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(java.util.concurrent.ExecutorService)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.Proxies()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ResponseProtocolCompliance()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.MemcachedCacheEntryFactoryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.SHA256KeyHashingScheme()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.clone()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.clone()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.hashCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runnable</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException.MemcachedKeyHashingException(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.MemcachedSerializationException(java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CacheResponseStatus(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.AGE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.ALLOW</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.AUTHORIZATION</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MAX_AGE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MAX_STALE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MIN_FRESH</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MUST_REVALIDATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_NO_CACHE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_NO_STORE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_PROXY_REVALIDATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.CONTENT_RANGE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.DELETE_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.ETAG</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.EXPIRES</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.GET_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.HEAD_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.IF_MATCH</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.IF_MODIFIED_SINCE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.IF_NONE_MATCH</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.IF_RANGE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.IF_UNMODIFIED_SINCE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.LAST_MODIFIED</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.MAX_FORWARDS</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.OPTIONS_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.PRAGMA</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.PRIVATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.PROXY_AUTHENTICATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.PUBLIC</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.PUT_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.RANGE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.STALE_IF_ERROR</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.STALE_WHILE_REVALIDATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.TRACE_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.VARY</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.VIA</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.WARNING</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants.WWW_AUTHENTICATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.CACHE_RESPONSE_STATUS</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.REQUEST_METHOD_HEADER_NAME</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getIdentifier()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.identifier</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$variantURI</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantCacheKey</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantKey</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.hostname</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.notGetOrHeadRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizePort(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isRevalidatable(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.increaseErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.getErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.increaseErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.resetErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getKey()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.key</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.addHeader(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.containsHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getFirstHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLastHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.removeHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeader(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setReasonPhrase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.RequestProtocolError(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.AUTH_CACHEABLE_PARAMS</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.UNEXPECTED_100_CONTINUE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.UNEXPECTED_PARTIAL_CONTENT</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.removeResponseTransferEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureNotConsumed()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.cacheKey</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getCacheKey()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getVariantKey()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.variantKey</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.ASCTIME_DATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.DATE1</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.DATE2</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.DATE3</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.DOMAINLABEL</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOST</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOSTNAME</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HTTP_DATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.IPV4ADDRESS</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.MONTH</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.PORT</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.RFC1123_DATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.RFC850_DATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.TIME</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.TOPLABEL</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WEEKDAY</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WKDAY</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnAgent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnText()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnAgent</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnText</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme.hash(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getStorageKey()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getUnsetCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getStorageKey()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.prefix</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.contains(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.notGetOrHeadRequest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equalsIgnoreCase(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizePort(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.format(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getBytes()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(float)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.nanoTime()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException.MemcachedKeyHashingException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.MemcachedSerializationException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.addSuppressed(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.ref</name>
        <class confirmed="no">
            <name>java.lang.ref.PhantomReference</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference</inbound>
            <feature confirmed="no">
                <name>java.lang.ref.PhantomReference.PhantomReference(java.lang.Object, java.lang.ref.ReferenceQueue)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ref.Reference</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.ref.ReferenceQueue</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            <feature confirmed="no">
                <name>java.lang.ref.ReferenceQueue.ReferenceQueue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ref.ReferenceQueue.poll()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationHandler</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.CLOSE_METHOD</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Proxy</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.InetAddress</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            <feature confirmed="no">
                <name>java.net.InetAddress.getHostName()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetAddress.getLocalHost()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.InetSocketAddress</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.MalformedURLException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URI</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.BASE_URI</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="no">
                <name>java.net.URI.create(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toASCIIString()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URISyntaxException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.URL(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.URL(java.lang.String, java.lang.String, int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.URL(java.net.URL, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getAuthority()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getHost()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getPath()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getPort()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getProtocol()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getQuery()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.toString()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URLEncoder</name>
            <feature confirmed="no">
                <name>java.net.URLEncoder.encode(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.UnknownHostException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.nio.channels</name>
        <class confirmed="no">
            <name>java.nio.channels.FileChannel</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.nio.channels.FileChannel.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.FileChannel.transferTo(long, long, java.nio.channels.WritableByteChannel)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.WritableByteChannel</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.nio.charset</name>
        <class confirmed="no">
            <name>java.nio.charset.Charset</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="no">
                <name>java.nio.charset.Charset.name()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.nio.charset.StandardCharsets</name>
            <feature confirmed="no">
                <name>java.nio.charset.StandardCharsets.UTF_8</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.security</name>
        <class confirmed="no">
            <name>java.security.MessageDigest</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.security.MessageDigest.digest()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.MessageDigest.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.MessageDigest.update(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.NoSuchAlgorithmException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
        </class>
        <class confirmed="no">
            <name>java.security.SecureRandom</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.rnd</inbound>
            <feature confirmed="no">
                <name>java.security.SecureRandom.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.SecureRandom.nextInt()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.SecureRandom.setSeed(long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableSet(java.util.Set)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.getScheduledIdentifiers()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Date</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.date</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.requestDate</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseDate</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnDate</inbound>
            <feature confirmed="no">
                <name>java.util.Date.Date()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Date.after(java.util.Date)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Date.before(java.util.Date)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Date.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Date.getTime()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Formatter</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <feature confirmed="no">
                <name>java.util.Formatter.Formatter(java.lang.Appendable, java.util.Locale)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Formatter.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Formatter.format(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedHashMap</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</inbound>
            <feature confirmed="no">
                <name>java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.CacheMap(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.disallowedWithNoCache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.listIterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.ListIterator</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>java.util.ListIterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.next()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.remove()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Locale</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setLocale(java.util.Locale)</inbound>
            <feature confirmed="no">
                <name>java.util.Locale.US</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.variantMap</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.viaHeaders</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <feature confirmed="no">
                <name>java.util.Map.entrySet()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.values()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.removeEldestEntry(java.util.Map$Entry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getKey()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getValue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.getScheduledIdentifiers()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.safeRequestMethods</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getTrailerNames()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.cacheableStatuses</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.uncacheableStatuses</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.clear()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.ArrayBlockingQueue</name>
            <feature confirmed="no">
                <name>java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.BlockingQueue</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentHashMap</name>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentMap</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.entrySet()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.remove(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.replace(java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentMap.size()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ExecutorService</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(java.util.concurrent.ExecutorService)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.execute(java.lang.Runnable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.shutdown()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.close()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Future</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.RejectedExecutionException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ScheduledExecutorService</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.executor</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ScheduledExecutorService.shutdown()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.close()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ScheduledFuture</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ScheduledThreadPoolExecutor</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ThreadPoolExecutor</name>
            <feature confirmed="no">
                <name>java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.TimeUnit</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.TimeUnit.MILLISECONDS</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.TimeUnit.SECONDS</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.TimeUnit.toMillis(long)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent.atomic</name>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicBoolean</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicBoolean.AtomicBoolean(boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicBoolean.get()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicLong</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheHits()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheMisses()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheUpdates()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.AtomicLong()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.get()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheHits()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheMisses()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheUpdates()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.getAndIncrement()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.end()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.find()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.lookingAt()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.start()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT_PATTERN</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE_PATTERN</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>net.sf.ehcache</name>
        <class confirmed="no">
            <name>net.sf.ehcache.Ehcache</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="no">
                <name>net.sf.ehcache.Ehcache.get(java.io.Serializable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.sf.ehcache.Ehcache.remove(java.io.Serializable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.sf.ehcache.Ehcache.replace(net.sf.ehcache.Element, net.sf.ehcache.Element)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>net.sf.ehcache.Element</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="no">
                <name>net.sf.ehcache.Element.Element(java.io.Serializable, java.io.Serializable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.sf.ehcache.Element.getObjectValue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>net.spy.memcached</name>
        <class confirmed="no">
            <name>net.spy.memcached.CASResponse</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="no">
                <name>net.spy.memcached.CASResponse.OK</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>net.spy.memcached.CASValue</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="no">
                <name>net.spy.memcached.CASValue.getCas()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.spy.memcached.CASValue.getValue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>net.spy.memcached.MemcachedClient</name>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClient.MemcachedClient(java.net.InetSocketAddress[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>net.spy.memcached.MemcachedClientIF</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClientIF.cas(java.lang.String, long, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClientIF.delete(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClientIF.get(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClientIF.gets(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>net.spy.memcached.MemcachedClientIF.set(java.lang.String, int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>net.spy.memcached.OperationTimeoutException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.commons.codec.binary</name>
        <class confirmed="no">
            <name>org.apache.commons.codec.binary.Hex</name>
            <feature confirmed="no">
                <name>org.apache.commons.codec.binary.Hex.encodeHexString(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.commons.logging</name>
        <class confirmed="no">
            <name>org.apache.commons.logging.Log</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.log</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.static {}</inbound>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.debug(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.error(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.isTraceEnabled()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.trace(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.warn(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.commons.logging.LogFactory</name>
            <feature confirmed="no">
                <name>org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.static {}</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.client5.http</name>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.HttpRoute</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.route</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.RouteInfo</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.apache.hc.client5.http.cache</name>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.CacheResponseStatus</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.$VALUES</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_HIT</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MISS</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MODULE_RESPONSE</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.CacheResponseStatus(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.VALIDATED</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_HIT</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MISS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MODULE_RESPONSE</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CacheResponseStatus(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.VALIDATED</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus.values()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.$VALUES</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.cache.CacheResponseStatus[]</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.cache.CacheResponseStatus[].clone()</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.cache.CacheResponseStatus[]</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.values()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.cache.CacheResponseStatus[].clone()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HeaderConstants</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.AGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.ALLOW</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.AUTHORIZATION</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MAX_AGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MAX_STALE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MIN_FRESH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_MUST_REVALIDATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_NO_CACHE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_NO_STORE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CACHE_CONTROL_PROXY_REVALIDATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.CONTENT_RANGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.DELETE_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.ETAG</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.EXPIRES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.GET_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.HEAD_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.HeaderConstants()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.IF_MATCH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.IF_MODIFIED_SINCE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.IF_NONE_MATCH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.IF_RANGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.IF_UNMODIFIED_SINCE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.LAST_MODIFIED</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.MAX_FORWARDS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.OPTIONS_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.PRAGMA</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.PRIVATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.PROXY_AUTHENTICATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.PUBLIC</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.PUT_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.RANGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.STALE_IF_ERROR</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.STALE_WHILE_REVALIDATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.TRACE_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.VARY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.VIA</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.WARNING</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HeaderConstants.WWW_AUTHENTICATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheContext</name>
            <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.CACHE_RESPONSE_STATUS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext()</name>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.HttpClientContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext(org.apache.hc.core5.http.protocol.HttpContext)</name>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.HttpClientContext(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.adapt(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.create()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.adapt(org.apache.hc.core5.http.protocol.HttpContext)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.create()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.protocol.BasicHttpContext.BasicHttpContext()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.getAttribute(java.lang.String, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheContext.getCacheResponseStatus()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.cache.HttpCacheContext.getAttribute(java.lang.String, java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheEntry</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cacheEntry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$entry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$entry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.CacheEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedInitialAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedReceivedAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isRevalidatable(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.entryIsNotA204Response(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.entry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getHttpCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getUnsetCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getHttpCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.requestDate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseDate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.variantMap</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.HeaderGroup()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.REQUEST_METHOD_HEADER_NAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.date</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.HeaderGroup()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.addHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.headerIterator()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.date</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isRevalidatable(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getProtocolVersion()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getProtocolVersion()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getReasonPhrase()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestDate()</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.requestDate</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.resource</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseDate</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.entryIsNotA204Response(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusLine()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.variantMap</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.requestDate</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.resource</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.responseDate</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.HeaderGroup</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getProtocolVersion()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusLine()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.requestDate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseDate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntry.variantMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException</name>
            <outbound type="class" confirmed="no">java.io.IOException</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.initCause(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheInvalidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheInvalidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.httpCacheInvalidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheInvalidator(org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheStorage</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.storage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheStorage(org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.storage</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheStorage.removeEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.HttpCacheUpdateException</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.cache.HttpCacheUpdateException.initCause(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.cache.HttpCacheUpdateException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.HttpCacheUpdateException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.InputLimit</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.limit</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.InputLimit(long)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.value</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.getValue()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.value</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.isReached()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.reached</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.InputLimit(long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.isReached()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.reached()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.InputLimit.value</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.InputLimit(long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.getValue()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.Resource</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.resource</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.dispose()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.resource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.createResource(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.resource</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resource</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.Resource.dispose()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.dispose()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.Resource.getInputStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.Resource.length()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.cache.ResourceFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.resourceFactory</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.resourceFactory</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.resourceFactory</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setResourceFactory(org.apache.hc.client5.http.cache.ResourceFactory)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resourceFactory</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.apache.hc.client5.http.impl.cache</name>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cachingExec</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.consecutiveFailedAttempts</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.context</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.execAware</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.identifier</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.parent</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.request</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.route</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cacheEntry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cachingExec</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.consecutiveFailedAttempts</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getConsecutiveFailedAttempts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.context</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.execAware</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getConsecutiveFailedAttempts()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.consecutiveFailedAttempts</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getIdentifier()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.identifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.identifier</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getIdentifier()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotServerError(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.parent</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.request</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.error(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cachingExec</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.context</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.execAware</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotServerError(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.request</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.route</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.route</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.identifier</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.parent</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator</name>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.parent</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.asynchRevalidator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.schedulingStrategy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.CacheKeyGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.cacheKeyGenerator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.schedulingStrategy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.SchedulingStrategy.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.getScheduledIdentifiers()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.increaseErrorCount(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.resetErrorCount(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.getScheduledIdentifiers()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.markComplete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.RejectedExecutionException</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.queued</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.schedulingStrategy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache.getErrorCount(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.AsynchronousValidator.schedulingStrategy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.CacheKeyGenerator()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.maxObjectSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.resourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxObjectSize()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.HeapResourceFactory()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.access$000(org.apache.hc.client5.http.impl.cache.BasicHttpCache)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getResource()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.readResponse()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.wrap(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpHost)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheEntryUpdater</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheInvalidator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusLine()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.resourceFactory</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.removeEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.safeRequestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheInvalidator</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.safeRequestMethods</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getBytes()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setEntity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.entity.ByteArrayEntity.ByteArrayEntity(byte[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.maxObjectSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.resourceFactory</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.length()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.maxObjectSizeBytes</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.resourceFactory</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.responseGenerator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getCacheKey()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getEntry()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.safeRequestMethods</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.safeRequestMethods</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.access$000(org.apache.hc.client5.http.impl.cache.BasicHttpCache)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$req</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$variantURI</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.this$0</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$req</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$variantURI</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.access$000(org.apache.hc.client5.http.impl.cache.BasicHttpCache)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$entry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$req</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$variantURI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$req</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantCacheKey</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantKey</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.this$0</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$req</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantCacheKey</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantKey</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$entry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$req</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantCacheKey</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$variantKey</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxCacheEntries()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.CacheMap(int)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.get(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.remove(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.idgen</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.InetAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getHostName()</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getLocalHost()</outbound>
                <outbound type="class" confirmed="no">java.net.UnknownHostException</outbound>
                <outbound type="class" confirmed="no">java.security.NoSuchAlgorithmException</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.setSeed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.hostname</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.rnd</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.count</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.GuardedBy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</name>
                <outbound type="class" confirmed="no">java.lang.Appendable</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.nextInt()</outbound>
                <outbound type="class" confirmed="no">java.util.Formatter</outbound>
                <outbound type="feature" confirmed="no">java.util.Formatter.Formatter(java.lang.Appendable, java.util.Locale)</outbound>
                <outbound type="feature" confirmed="no">java.util.Formatter.close()</outbound>
                <outbound type="feature" confirmed="no">java.util.Formatter.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.US</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.count</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.hostname</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.rnd</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.hostname</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.BasicIdGenerator.rnd</name>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheConfig</name>
            <outbound type="class" confirmed="no">java.lang.Cloneable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheConfig</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheConfig</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.allow303Caching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkerIdleLifetimeSecs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersCore</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersMax</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCachingEnabled</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxCacheEntries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxObjectSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.neverCacheHTTP10ResponsesWithQuery</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.revalidationQueueSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.weakETagOnPutDeleteAllowed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_303_CACHING_ENABLED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_ASYNCHRONOUS_WORKERS_CORE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_ASYNCHRONOUS_WORKERS_MAX</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_ASYNCHRONOUS_WORKER_IDLE_LIFETIME_SECS</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_HEURISTIC_CACHING_ENABLED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_HEURISTIC_COEFFICIENT</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_HEURISTIC_LIFETIME</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_MAX_CACHE_ENTRIES</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_MAX_OBJECT_SIZE_BYTES</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_MAX_UPDATE_RETRIES</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_REVALIDATION_QUEUE_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT_WEAK_ETAG_ON_PUTDELETE_ALLOWED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.allow303Caching</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.is303CachingEnabled()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkerIdleLifetimeSecs</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkerIdleLifetimeSecs()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersCore</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersCore()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersMax</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.clone()</name>
                <outbound type="class" confirmed="no">java.lang.CloneNotSupportedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.clone()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkerIdleLifetimeSecs(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersCore(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersMax(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCachingEnabled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCoefficient(float)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicDefaultLifetime(long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxCacheEntries(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxObjectSize(long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxUpdateRetries(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setNeverCacheHTTP10ResponsesWithQueryString(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setRevalidationQueueSize(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setSharedCache(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkerIdleLifetimeSecs()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersCore()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicCoefficient()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicDefaultLifetime()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxCacheEntries()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxObjectSize()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxUpdateRetries()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getRevalidationQueueSize()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isHeuristicCachingEnabled()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isNeverCacheHTTP10ResponsesWithQuery()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.custom()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkerIdleLifetimeSecs()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkerIdleLifetimeSecs</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersCore()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersCore</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersMax</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicCoefficient()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCoefficient</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicDefaultLifetime()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicDefaultLifetime</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxCacheEntries()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxCacheEntries</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxObjectSize()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxObjectSize</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxUpdateRetries()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxUpdateRetries</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.getRevalidationQueueSize()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.revalidationQueueSize</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCachingEnabled</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isHeuristicCachingEnabled()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCoefficient</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicCoefficient()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicDefaultLifetime</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicDefaultLifetime()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.is303CachingEnabled()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.allow303Caching</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.isHeuristicCachingEnabled()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCachingEnabled</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.isNeverCacheHTTP10ResponsesWithQuery()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.neverCacheHTTP10ResponsesWithQuery</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.isWeakETagOnPutDeleteAllowed()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.weakETagOnPutDeleteAllowed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.maxCacheEntries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxCacheEntries()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.maxObjectSize</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxObjectSize()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.maxUpdateRetries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxUpdateRetries()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.neverCacheHTTP10ResponsesWithQuery</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isNeverCacheHTTP10ResponsesWithQuery()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.revalidationQueueSize</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getRevalidationQueueSize()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.static {}</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.allow303Caching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkerIdleLifetimeSecs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersCore</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.asynchronousWorkersMax</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCachingEnabled</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxCacheEntries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxObjectSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.neverCacheHTTP10ResponsesWithQuery</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.revalidationQueueSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.weakETagOnPutDeleteAllowed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig.weakETagOnPutDeleteAllowed</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isWeakETagOnPutDeleteAllowed()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.custom()</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.allow303Caching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkerIdleLifetimeSecs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersCore</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersMax</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCachingEnabled</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.isSharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxCacheEntries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxObjectSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.revalidationQueueSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.weakETagOnPutDeleteAllowed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.custom()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.allow303Caching</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAllow303Caching(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkerIdleLifetimeSecs</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkerIdleLifetimeSecs(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersCore</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersCore(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersMax</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersMax(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.allow303Caching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkerIdleLifetimeSecs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersCore</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersMax</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCachingEnabled</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.isSharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxCacheEntries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxObjectSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.neverCacheHTTP10ResponsesWithQuery</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.revalidationQueueSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.weakETagOnPutDeleteAllowed</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCachingEnabled</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCachingEnabled(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCoefficient</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCoefficient(float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicDefaultLifetime</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicDefaultLifetime(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.isSharedCache</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setSharedCache(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxCacheEntries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxCacheEntries(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxObjectSize</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxObjectSize(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxUpdateRetries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxUpdateRetries(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.neverCacheHTTP10ResponsesWithQuery</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setNeverCacheHTTP10ResponsesWithQueryString(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.revalidationQueueSize</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setRevalidationQueueSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAllow303Caching(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.allow303Caching</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkerIdleLifetimeSecs(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkerIdleLifetimeSecs</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersCore(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersCore</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setAsynchronousWorkersMax(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.asynchronousWorkersMax</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCachingEnabled(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCachingEnabled</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicCoefficient(float)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicCoefficient</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setHeuristicDefaultLifetime(long)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.heuristicDefaultLifetime</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxCacheEntries(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxCacheEntries</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxObjectSize(long)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxObjectSize</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setMaxUpdateRetries(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.maxUpdateRetries</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setNeverCacheHTTP10ResponsesWithQueryString(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.neverCacheHTTP10ResponsesWithQuery</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setRevalidationQueueSize(int)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.revalidationQueueSize</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setSharedCache(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.isSharedCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setWeakETagOnPutDeleteAllowed(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.weakETagOnPutDeleteAllowed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.weakETagOnPutDeleteAllowed</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.CacheConfig$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig$Builder.setWeakETagOnPutDeleteAllowed(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheEntity</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.CacheEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.CacheEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getContent()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getContentLength()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getTrailerNames()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.getTrailers()</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.TrailerSupplier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.isChunked()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.isRepeatable()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.isStreaming()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.cacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheEntryUpdater</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.HeapResourceFactory()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.resourceFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.after(java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header[]</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getAllHeaders()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.listIterator()</outbound>
                <outbound type="class" confirmed="no">java.util.ListIterator</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.remove()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.listIterator()</outbound>
                <outbound type="class" confirmed="no">java.util.ListIterator</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.remove()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getAllHeaders()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.resourceFactory</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater(org.apache.hc.client5.http.cache.ResourceFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusLine()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.resourceFactory</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.check(boolean, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.removeEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.storage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.error(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getVariantMap()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getAuthority()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushAbsoluteUriFromSameHost(java.net.URL, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.storage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getAbsoluteURL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.getRelativeURL(java.net.URL, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.net.URL, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushRelativeUriFromSameHost(java.net.URL, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.notGetOrHeadRequest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.notGetOrHeadRequest(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.before(java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.isAHeadCacheEntry(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheInvalidator.storage</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getEntry(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.cacheKeyGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.access$000(org.apache.hc.client5.http.impl.cache.BasicHttpCache)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.uriExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.cacheKeyGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.BASE_URI</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.CacheKeyGenerator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizePort(int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toASCIIString()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.lang.String, java.lang.String, int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getHost()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getPort()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getProtocol()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getQuery()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.BASE_URI</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizePort(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.URIUtils.resolve(java.net.URI, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushUriIfSameHost(java.net.URL, java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpHost.toString()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.UnsupportedEncodingException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.net.URLEncoder.encode(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.nio.charset.Charset</outbound>
                <outbound type="feature" confirmed="no">java.nio.charset.Charset.name()</outbound>
                <outbound type="feature" confirmed="no">java.nio.charset.StandardCharsets.UTF_8</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.BASE_URI</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheMap</name>
            <outbound type="class" confirmed="no">java.util.LinkedHashMap</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.entries</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.CacheMap(int)</name>
                <outbound type="feature" confirmed="no">java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.maxEntries</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.clear()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.maxEntries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.CacheMap(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.removeEldestEntry(java.util.Map$Entry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.removeEldestEntry(java.util.Map$Entry)</name>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.maxEntries</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.size()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.serialVersionUID</name>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CacheMap.size()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.removeEldestEntry(java.util.Map$Entry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.validityStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.CacheValidityPolicy()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.MAX_AGE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedReceivedAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedReceivedAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedInitialAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedReceivedAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedReceivedAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getApparentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedInitialAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedInitialAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResidentTimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getResponseDelaySecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.getTime()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResponseDate()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCorrectedInitialAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getHeuristicFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, float, long)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isRevalidatable(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheableRequestPolicy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.log</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getProtocolVersion()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.responseGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.CacheValidityPolicy()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.validityStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContentLength()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.CacheEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.validityStrategy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setEntity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.validityStrategy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.CacheValidityPolicy()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicCoefficient()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getHeuristicDefaultLifetime()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isHeuristicCachingEnabled()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.sharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.useHeuristicCaching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NumberFormatException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.contentLengthHeaderMatchesActualLength(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.entryIsNotA204Response(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.containsHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.cacheEntryDoesNotContainMethodAndEntity(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.entryIsNotA204Response(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicCoefficient</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicDefaultLifetime</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isResponseHeuristicallyFresh(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, float, long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicCoefficient</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.heuristicDefaultLifetime</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.useHeuristicCaching</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.after(java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.sharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.sharedCache</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.useHeuristicCaching</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.validityStrategy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.originInsistsOnFreshness(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachingExec</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.cachingExec</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.AtomicLong()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxObjectSize()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.is303CachingEnabled()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isNeverCacheHTTP10ResponsesWithQuery()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isWeakETagOnPutDeleteAllowed()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.CacheValidityPolicy()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.CacheableRequestPolicy()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.CachedHttpResponseGenerator(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.CachedResponseSuitabilityChecker(org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.asynchRevalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheableRequestPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCachingPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.viaHeaders</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.ConditionalRequestBuilder()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ResponseProtocolCompliance()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.AtomicLong()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.asynchRevalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheableRequestPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCachingPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.viaHeaders</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.SUPPORTS_RANGE_AND_CONTENT_RANGE_HEADERS</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.before(java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.asynchRevalidator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.backend</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.cacheConfig</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheHits()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheMisses()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCacheUpdates()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.cacheableRequestPolicy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.create()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MISS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MODULE_RESPONSE</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheableRequestPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getCurrentAgeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getFreshnessLifetimeSecs(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_HIT</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getStalenessSecs(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.containsHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MODULE_RESPONSE</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.viaHeaders</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpMessage.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.getMajor()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.getMinor()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.getProtocol()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.util.VersionInfo</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.VersionInfo.getRelease()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String, java.lang.ClassLoader)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getCacheHits()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getCacheMisses()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getCacheUpdates()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_MODULE_RESPONSE</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getCacheKey()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCachingPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.isEmpty()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getEntry()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getEntity()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.getAndIncrement()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.isTraceEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheHits</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.getAndIncrement()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.isTraceEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheMisses</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.getAndIncrement()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.VALIDATED</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheUpdates</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.responseCachingPolicy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.responseCompliance</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.RouteInfo</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getCurrentDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleIfErrorAppliesTo(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getURI()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setURI(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.URIUtils.rewriteURIForRoute(java.net.URI, org.apache.hc.client5.http.RouteInfo)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolException.ProtocolException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.trace(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.HttpRoute</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.asynchRevalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpExecutionAware</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.HttpClientContext</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.before(java.util.Date)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.staleIfErrorAppliesTo(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.isSharedCache()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mustRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.proxyRevalidate(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.cacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.suitabilityChecker</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.supportsRangeAndContentRangeHeaders()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.CacheResponseStatus.CACHE_HIT</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.protocol.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.validityPolicy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingExec.viaHeaders</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</name>
            <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.HttpClientBuilder</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createMemoryBound()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.custom()</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.CachingHttpClientBuilder()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.deleteCache</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.sync.HttpClientBuilder.HttpClientBuilder()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.create()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.addCloseable(java.io.Closeable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.build()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createMemoryBound()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheConfig</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheDir(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.create()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.CachingHttpClientBuilder()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createMemoryBound()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.custom()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.addCloseable(java.io.Closeable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.schedulingStrategy</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheInvalidator)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage.BasicHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.CacheInvalidator(org.apache.hc.client5.http.impl.cache.CacheKeyGenerator, org.apache.hc.client5.http.cache.HttpCacheStorage)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.CacheKeyGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.addCloseable(java.io.Closeable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheDir</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.deleteCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.httpCacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.resourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.storage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.HeapResourceFactory()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.ClientExecChain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.deleteCache</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.CachingHttpClientBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setDeleteCache(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.httpCacheInvalidator</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheInvalidator(org.apache.hc.client5.http.cache.HttpCacheInvalidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.resourceFactory</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setResourceFactory(org.apache.hc.client5.http.cache.ResourceFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.schedulingStrategy</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setSchedulingStrategy(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheConfig</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheDir(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.cacheDir</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setDeleteCache(boolean)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.deleteCache</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheInvalidator(org.apache.hc.client5.http.cache.HttpCacheInvalidator)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.httpCacheInvalidator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheStorage(org.apache.hc.client5.http.cache.HttpCacheStorage)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.storage</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setResourceFactory(org.apache.hc.client5.http.cache.ResourceFactory)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.resourceFactory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setSchedulingStrategy(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.schedulingStrategy</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.storage</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setHttpCacheStorage(org.apache.hc.client5.http.cache.HttpCacheStorage)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1</name>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.val$managedStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.val$managedStorage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.this$0</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.val$managedStorage</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.close()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CachingHttpClients</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClients.CachingHttpClients()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.create()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setCacheDir(java.io.File)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.CloseableHttpClient</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClients.createMemoryBound()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.create()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.sync.CloseableHttpClient</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CachingHttpClients.custom()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.create()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CombinedEntity</name>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.http.entity.AbstractHttpEntity</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.this$0</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.SequenceInputStream.SequenceInputStream(java.io.InputStream, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.combinedStream</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.resource</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.entity.AbstractHttpEntity.AbstractHttpEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.access$000(org.apache.hc.client5.http.impl.cache.CombinedEntity)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.dispose()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.combinedStream</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.dispose()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.dispose()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.access$000(org.apache.hc.client5.http.impl.cache.CombinedEntity)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.combinedStream</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.getContentLength()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.isRepeatable()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.isStreaming()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.resource</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.dispose()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.setChunked(boolean)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.setContentEncoding(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.setContentType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.getContent()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream</name>
            <outbound type="class" confirmed="no">java.io.FilterInputStream</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</name>
                <outbound type="feature" confirmed="no">java.io.FilterInputStream.FilterInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</name>
                <outbound type="feature" confirmed="no">java.io.FilterInputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.access$000(org.apache.hc.client5.http.impl.cache.CombinedEntity)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.this$0</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.CombinedEntity$ResourceStream(org.apache.hc.client5.http.impl.cache.CombinedEntity, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity$ResourceStream.close()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.conditionalRequestBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.ConditionalRequestBuilder()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getTarget()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.wrap(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpHost)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getTarget()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.wrap(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpHost)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getTarget()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.removeHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.wrap(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpHost)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCache</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DEFAULT_MAX_SIZE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.maxSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.MAX_UPDATE_TRIES</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.entrySet()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getCreationTimeInNanos()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getErrorCount()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.increaseErrorCount(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.maxSize</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.remove(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.size()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.maxSize</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getKey()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.increaseErrorCount(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.DefaultFailureCache(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.resetErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentMap.replace(java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.storage</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getErrorCount()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.increaseErrorCount(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.DefaultHttpCacheEntrySerializer()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.readFrom(java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.readObject()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializationException.HttpCacheEntrySerializationException(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_BACK_OFF_RATE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_INITIAL_EXPIRY_IN_MILLIS</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_MAX_EXPIRY_IN_MILLIS</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledExecutorService</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.backOffRate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.executor</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.initialExpiryInMillis</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.maxExpiryInMillis</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNegative(long, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_INITIAL_EXPIRY_IN_MILLIS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_MAX_EXPIRY_IN_MILLIS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledExecutorService</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledThreadPoolExecutor</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.backOffRate</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getBackOffRate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(long, long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.pow(double, double)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.backOffRate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.initialExpiryInMillis</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.maxExpiryInMillis</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.close()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ScheduledExecutorService.shutdown()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.executor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.createThreadPoolFromCacheConfig(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledThreadPoolExecutor</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig, long, long, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.executor</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledExecutorService</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getBackOffRate()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.backOffRate</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getInitialExpiryInMillis()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.initialExpiryInMillis</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getMaxExpiryInMillis()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.maxExpiryInMillis</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.initialExpiryInMillis</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getInitialExpiryInMillis()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.maxExpiryInMillis</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.getMaxExpiryInMillis()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ScheduledFuture</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.MILLISECONDS</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.getConsecutiveFailedAttempts()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.calculateDelayInMillis(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.executor</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.static {}</name>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.SECONDS</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.toMillis(long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_INITIAL_EXPIRY_IN_MILLIS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.DEFAULT_MAX_EXPIRY_IN_MILLIS</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.FailureCache</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.failureCache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCache.getErrorCount(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCache.increaseErrorCount(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobFailed(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCache.resetErrorCount(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.jobSuccessful(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.nanoTime()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.creationTimeInNanos</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.errorCount</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.key</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.creationTimeInNanos</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getCreationTimeInNanos()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.errorCount</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getErrorCount()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.getCreationTimeInNanos()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.creationTimeInNanos</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.findValueWithOldestTimestamp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.getErrorCount()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.errorCount</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.getErrorCount(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.updateValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.getKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.key</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache.removeOldestEntryIfMapSizeExceeded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.key</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.FailureCacheValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.getKey()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FailureCacheValue.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.creationTimeInNanos</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.errorCount</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue.key</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.FileResource</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.disposed</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.dispose()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.disposed</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.disposed</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.dispose()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.file</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.dispose()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getFile()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.length()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.getFile()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.getInputStream()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.length()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.file</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResource.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.BasicIdGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.cacheDir</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.idgen</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.cacheDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.getFile()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.addSuppressed(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource.FileResource(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isLetterOrDigit(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.generate(java.lang.StringBuilder)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.cacheDir</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.idgen</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.FileResourceFactory.idgen</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.FileResourceFactory(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.generateUniqueCacheFile(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.HeapResource</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.HeapResource(byte[])</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.b</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.createResource(byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.b</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.HeapResource(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.getByteArray()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.length()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.dispose()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.getByteArray()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.b</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.getInputStream()</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.b</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.length()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.b</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResource.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.HeapResourceFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResourceFactory.HeapResourceFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.BasicHttpCache(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.CacheEntryUpdater()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.getInputStream()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.getByteArray()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.createResource(byte[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResourceFactory.createResource(byte[])</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource.HeapResource(byte[])</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HeapResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.reached()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.createResource(byte[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.HttpCache</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCache</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpHost</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.IOUtils</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.IOUtils()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="feature" confirmed="no">java.io.Closeable.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContent()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.isStreaming()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.write(byte[], int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.copyAndClose(java.io.InputStream, java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.copy(java.io.InputStream, java.io.OutputStream)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.IOUtils.copyFile(java.io.File, java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.RandomAccessFile.RandomAccessFile(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.RandomAccessFile.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.RandomAccessFile.getChannel()</outbound>
                <outbound type="feature" confirmed="no">java.io.RandomAccessFile.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.FileChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.FileChannel.close()</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.FileChannel.transferTo(long, long, java.nio.channels.WritableByteChannel)</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.WritableByteChannel</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.closeSilently(java.io.Closeable)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory.copy(java.lang.String, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SchedulingStrategy</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(java.util.concurrent.ExecutorService)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="feature" confirmed="no">java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue(int)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.SECONDS</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkerIdleLifetimeSecs()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersCore()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getAsynchronousWorkersMax()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getRevalidationQueueSize()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(java.util.concurrent.ExecutorService)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.close()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.shutdown()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.ImmediateSchedulingStrategy(java.util.concurrent.ExecutorService)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.awaitTermination(long, java.util.concurrent.TimeUnit)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.execute(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.executor</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</name>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.ThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.CachingHttpClientBuilder$1(org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder, org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.val$managedStorage</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.ReferenceQueue.ReferenceQueue()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.AtomicBoolean(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxCacheEntries()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap.CacheMap(int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.Reference</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.ReferenceQueue.poll()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.get()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.dispose()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.Reference</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.ReferenceQueue.poll()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.dispose()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.get()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</name>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ManagedHttpCacheStorage(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.Reference</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.ReferenceQueue.poll()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicBoolean</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.Resource.dispose()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.active</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.morque</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.resources</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder$1.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheMap</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CacheMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.ensureValidState()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.entries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response</name>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.statusLine</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.version</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.AbstractHttpMessage()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicStatusLine.BasicStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.addHeader(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.addHeader(org.apache.hc.core5.http.Header)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.containsHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.containsHeader(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getAllHeaders()</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.getAllHeaders()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getCode()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getEntity()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getFirstHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.getFirstHeader(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getHeaders(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.getHeaders(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLastHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.getLastHeader(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLocale()</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getProtocolVersion()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.version</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getStatusLine()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.statusLine</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator()</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.headerIterator()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.AbstractHttpMessage.headerIterator(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.removeHeader(org.apache.hc.core5.http.Header)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.removeHeaders(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(org.apache.hc.core5.http.HttpEntity)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeader(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeader(org.apache.hc.core5.http.Header)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeaders(org.apache.hc.core5.http.Header[])</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setLocale(java.util.Locale)</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setReasonPhrase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusCode(int)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.ProtocolVersion, int)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.StatusLine)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.statusLine</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getStatusLine()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.version</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getProtocolVersion()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.Proxies</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Proxies.Proxies()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.requestCompliance</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.weakETagOnPutDeleteAllowed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance(boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.weakETagOnPutDeleteAllowed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContentType()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getEntity()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.entity.AbstractHttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.entity.AbstractHttpEntity.setContentType(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.entity.ContentType</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.entity.ContentType.APPLICATION_OCTET_STREAM</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.entity.ContentType.getMimeType()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.removeHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.setHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.disallowedWithNoCache</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.$SwitchMap$org$apache$hc$client5$http$impl$cache$RequestProtocolError</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.RequestProtocolError.ordinal()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.StatusLine)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicStatusLine.BasicStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setEntity(org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.setProtocolVersion(org.apache.hc.core5.http.ProtocolVersion)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.protocol.ClientProtocolException</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.addHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.removeHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.NO_CACHE_DIRECTIVE_WITH_FIELD_NAME</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_AND_RANGE_ERROR</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.weakETagOnPutDeleteAllowed</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.getMajor()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.getMinor()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.getMajor()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.getMinor()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.disallowedWithNoCache</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.disallowedWithNoCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.removeHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.setHeader(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.containsHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.weakETagOnPutDeleteAllowed</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.RequestProtocolCompliance(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.$SwitchMap$org$apache$hc$client5$http$impl$cache$RequestProtocolError</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</name>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.$SwitchMap$org$apache$hc$client5$http$impl$cache$RequestProtocolError</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.BODY_BUT_NO_LENGTH_ERROR</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.NO_CACHE_DIRECTIVE_WITH_FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_AND_RANGE_ERROR</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.RequestProtocolError.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.$VALUES</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.BODY_BUT_NO_LENGTH_ERROR</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.NO_CACHE_DIRECTIVE_WITH_FIELD_NAME</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.RequestProtocolError(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.UNKNOWN</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_AND_RANGE_ERROR</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.ordinal()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.BODY_BUT_NO_LENGTH_ERROR</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.NO_CACHE_DIRECTIVE_WITH_FIELD_NAME</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.RequestProtocolError(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.UNKNOWN</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_AND_RANGE_ERROR</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.$VALUES</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.cache.RequestProtocolError[]</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.RequestProtocolError[].clone()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError[]</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.RequestProtocolError[].clone()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolError.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ResourceReference</name>
            <outbound type="class" confirmed="no">java.lang.ref.PhantomReference</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.ref.PhantomReference.PhantomReference(java.lang.Object, java.lang.ref.ReferenceQueue)</outbound>
                <outbound type="class" confirmed="no">java.lang.ref.ReferenceQueue</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getResource()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.resource</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.keepResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResourceReference.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.cleanResources()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.shutdown()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResourceReference.hashCode()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResourceReference.resource</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.getResource()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.hashCode()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCachingPolicy</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.AUTH_CACHEABLE_PARAMS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.maxObjectSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.neverCache1_0ResponsesWithQueryString</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.sharedCache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.uncacheableStatuses</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.cacheableStatuses</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.before(java.util.Date)</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_0</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpMessage.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.sharedCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.cacheableStatuses</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.maxObjectSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.uncacheableStatuses</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.unknownStatusCode(int)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.debug(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.AUTH_CACHEABLE_PARAMS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.log</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.neverCache1_0ResponsesWithQueryString</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.sharedCache</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpMessage</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.maxObjectSizeBytes</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.neverCache1_0ResponsesWithQueryString</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.sharedCache</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.AUTH_CACHEABLE_PARAMS</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.cacheableStatuses</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.uncacheableStatuses</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.ResponseCachingPolicy(long, boolean, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.unknownStatusCode(int)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.Immutable</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.responseCompliance</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ResponseProtocolCompliance()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.UNEXPECTED_100_CONTINUE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.UNEXPECTED_PARTIAL_CONTENT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.Date()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.removeHeaders(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.ClientProtocolException.ClientProtocolException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setEntity(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getElements()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HeaderElement</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HeaderElement.getName()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.removeHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.removeResponseTransferEncoding(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.removeHeaders(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.protocol.ClientProtocolException.ClientProtocolException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.StatusLine.getStatusCode()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.removeResponseTransferEncoding(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getProtocolVersion()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpVersion.HTTP_1_1</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.ProtocolVersion</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.Date.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.addHeader(org.apache.hc.core5.http.Header)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.removeHeaders(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.CLOSE_METHOD</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.original</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.original</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.getEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.CLOSE_METHOD</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.original</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.original</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.static {}</name>
                <outbound type="class" confirmed="no">java.io.Closeable</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.CLOSE_METHOD</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.SchedulingStrategy</name>
            <outbound type="class" confirmed="no">java.io.Closeable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.AsynchronousValidator(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.schedulingStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createAsynchronousRevalidator(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.createSchedulingStrategy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.schedulingStrategy</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.setSchedulingStrategy(org.apache.hc.client5.http.impl.cache.SchedulingStrategy)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.SchedulingStrategy.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.apache.hc.core5.annotation.NotThreadSafe</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.maxResponseSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.request</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.access$000(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.consumed</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureNotConsumed()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.readResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.InputLimit(long)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.isReached()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory.generate(java.lang.String, java.io.InputStream, org.apache.hc.client5.http.cache.InputLimit)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.consumed</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureNotConsumed()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.instream</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.limit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.maxResponseSizeBytes</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.request</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resourceFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getEntity()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContent()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpRequest.getRequestLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.RequestLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.RequestLine.getUri()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.readResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.consumed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getResource()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureNotConsumed()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.consumed</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CombinedEntity.setChunked(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CombinedEntity.setContentEncoding(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.CombinedEntity.setContentType(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.instream</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getAllHeaders()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getEntity()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpEntity</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContentEncoding()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.getContentType()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpEntity.isChunked()</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setEntity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.HttpResponse.setHeaders(org.apache.hc.core5.http.Header[])</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.StatusLine</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.StatusLine)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getResource()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.instream</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit.isReached()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.ensureConsumed()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.limit</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.limit</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.isLimitReached()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.maxResponseSizeBytes</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.readResponse()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.consumed</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.request</name>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpRequest</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resource</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.resourceFactory</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.ResourceFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</name>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.access$000(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1</name>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.this$0</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.HttpResponse</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.access$000(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader)</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.this$0</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.Variant</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.cacheKey</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.entry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.variantKey</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.cacheKey</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getCacheKey()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.entry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.getCacheKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.cacheKey</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.getEntry()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.entry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.getVariantKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.variantKey</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.Variant.variantKey</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.Variant(java.lang.String, java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Variant.getVariantKey()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.WarningValue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.ASCTIME_DATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.DATE1</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.DATE2</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.DATE3</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.DOMAINLABEL</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.HOST</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.HOSTNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT_PATTERN</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.HTTP_DATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.IPV4ADDRESS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.MONTH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.PORT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.RFC1123_DATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.RFC850_DATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.TIME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.TOPLABEL</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE_PATTERN</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WEEKDAY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WKDAY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.init_offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.end()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.find()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.start()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT_PATTERN</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isChar(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isControl(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isTokenChar(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnAgent</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</name>
                <outbound type="feature" confirmed="no">java.lang.Character.isDigit(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnCode</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.end()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.lookingAt()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE_PATTERN</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnDate</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnText</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.getWarnAgent()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnAgent</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.getWarnCode()</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnCode</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.getWarnDate()</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnDate</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.getWarnText()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnText</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.offs</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.client5.http.impl.cache.WarningValue[]</outbound>
                <outbound type="class" confirmed="no">org.apache.hc.core5.http.Header</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.core5.http.Header.getValue()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.init_offs</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.isChar(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isTokenChar(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.isControl(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isTokenChar(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.isSeparator(char)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isTokenChar(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.isTokenChar(char)</name>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isChar(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isControl(char)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.isSeparator(char)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.offs</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.init_offs</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.src</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.src</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WarningValue(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeCharacter(char)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeHostPort()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeLinearWhitespace()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeQuotedString()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeToken()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnValue()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.parseError()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.HOSTPORT_PATTERN</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.WARN_DATE_PATTERN</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnAgent</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnCode</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnDate</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.warnText</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.warnAgent</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnAgent()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.warnCode</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.warnDate</name>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.WarningValue.warnText</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnText()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarnText()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.impl.cache.WarningValue[]</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.apache.hc.client5.http.impl.cache.ehcache</name>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</name>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.DefaultHttpCacheEntrySerializer()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</name>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer.DefaultHttpCacheEntrySerializer()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxUpdateRetries()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</name>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Serializable</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Ehcache.get(java.io.Serializable)</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Element</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Element.getObjectValue()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.maxUpdateRetries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Serializable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Element</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Element.Element(java.io.Serializable, java.io.Serializable)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.removeEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.Serializable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Ehcache.remove(java.io.Serializable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.EhcacheHttpCacheStorage(net.sf.ehcache.Ehcache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.cache.HttpCacheEntrySerializer)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Serializable</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Ehcache</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Ehcache.get(java.io.Serializable)</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Ehcache.replace(net.sf.ehcache.Element, net.sf.ehcache.Element)</outbound>
                <outbound type="class" confirmed="no">net.sf.ehcache.Element</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Element.Element(java.io.Serializable, java.io.Serializable)</outbound>
                <outbound type="feature" confirmed="no">net.sf.ehcache.Element.getObjectValue()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.readFrom(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntrySerializer.writeTo(org.apache.hc.client5.http.cache.HttpCacheEntry, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.cache</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ehcache.EhcacheHttpCacheStorage.serializer</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.apache.hc.client5.http.impl.cache.memcached</name>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.keyHashingScheme</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.backingScheme</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme.hash(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getUnsetCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getUnsetCacheEntry()</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getHttpCacheEntry()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getStorageKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.set(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.toByteArray()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.memcachedCacheEntryFactory</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getUnsetCacheEntry()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.MemcachedCacheEntryFactoryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getUnsetCacheEntry()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.getUnsetCacheEntry()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getHttpCacheEntry()</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getStorageKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getHttpCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.MemcachedCacheEntryImpl(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.getStorageKey()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.readObject()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.MemcachedSerializationException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.httpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.key</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.MemcachedSerializationException(java.lang.Throwable)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheStorage</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.InetSocketAddress</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClient.MemcachedClient(java.net.InetSocketAddress[])</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</name>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.DEFAULT</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactoryImpl.MemcachedCacheEntryFactoryImpl()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.SHA256KeyHashingScheme()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(java.net.InetSocketAddress)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.getMaxUpdateRetries()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.keyHashingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.memcachedCacheEntryFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</name>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</name>
                <outbound type="class" confirmed="no">B[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.warn(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme.hash(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.keyHashingScheme</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClientIF.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.OperationTimeoutException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getHttpCacheEntry()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getStorageKey()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.keyHashingScheme</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.maxUpdateRetries</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.memcachedCacheEntryFactory</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClientIF.set(java.lang.String, int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.OperationTimeoutException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.set(byte[])</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getUnsetCacheEntry()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.convertToByteArray(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.memcachedCacheEntryFactory</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClientIF.delete(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.OperationTimeoutException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException()</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.initCause(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.toByteArray()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryFactory.getMemcachedCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.memcachedCacheEntryFactory</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.CASResponse</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.CASResponse.OK</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.CASValue</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.CASValue.getCas()</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.CASValue.getValue()</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.MemcachedClientIF</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClientIF.cas(java.lang.String, long, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">net.spy.memcached.MemcachedClientIF.gets(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">net.spy.memcached.OperationTimeoutException</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateCallback.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheUpdateException.HttpCacheUpdateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getHttpCacheEntry()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntry.getStorageKey()</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.client</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.maxUpdateRetries</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getCacheKey(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException.MemcachedKeyHashingException(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException</name>
            <outbound type="class" confirmed="no">java.io.IOException</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="no">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.initCause(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.initCause(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.MemcachedOperationTimeoutException(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedOperationTimeoutException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.reconstituteEntry(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.serializeEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.MemcachedSerializationException(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.set(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedCacheEntryImpl.toByteArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.MemcachedSerializationException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.backingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.prefix</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.backingScheme</name>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme.hash(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.backingScheme</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.prefix</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.prefix</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.PrefixKeyHashingScheme(java.lang.String, org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.PrefixKeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.KeyHashingScheme</outbound>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.SHA256KeyHashingScheme()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedHttpCacheStorage.MemcachedHttpCacheStorage(net.spy.memcached.MemcachedClientIF)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.MessageDigest</outbound>
                <outbound type="feature" confirmed="no">java.security.MessageDigest.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.security.NoSuchAlgorithmException</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.Log.error(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.MemcachedKeyHashingException.MemcachedKeyHashingException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.hash(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getBytes()</outbound>
                <outbound type="class" confirmed="no">java.security.MessageDigest</outbound>
                <outbound type="feature" confirmed="no">java.security.MessageDigest.digest()</outbound>
                <outbound type="feature" confirmed="no">java.security.MessageDigest.update(byte[])</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.codec.binary.Hex.encodeHexString(byte[])</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.log</name>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.getDigest()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.apache.commons.logging.Log</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.logging.LogFactory.getLog(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.memcached.SHA256KeyHashingScheme.log</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.client5.http.impl.sync</name>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.impl.sync.ClientExecChain</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.cache.ResourceFactory, org.apache.hc.client5.http.cache.HttpCacheStorage, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheValidityPolicy, org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy, org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator, org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy, org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker, org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder, org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance, org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.backend</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.decorateMainExec(org.apache.hc.client5.http.impl.sync.ClientExecChain)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.sync.ClientExecChain.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.impl.sync.CloseableHttpClient</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createFileBound(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients.createMemoryBound()</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.impl.sync.HttpClientBuilder</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.impl.sync.HttpClientBuilder.HttpClientBuilder()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClientBuilder.CachingHttpClientBuilder()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.client5.http.methods</name>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.methods.CloseableHttpResponse</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.access$000(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.response</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.addHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.close()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.getAllHeaders()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.getEntity()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.getFirstHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.CloseableHttpResponse.getStatusLine()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.methods.HttpExecutionAware</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.execAware</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.methods.HttpRequestWrapper</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.request</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.staleResponseNotAllowed(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.addHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.containsHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getAllHeaders()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getOriginal()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getRequestLine()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getTarget()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.getURI()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.removeHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.setEntity(org.apache.hc.core5.http.HttpEntity)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.setHeaders(org.apache.hc.core5.http.Header[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.setProtocolVersion(org.apache.hc.core5.http.ProtocolVersion)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.setURI(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.methods.HttpRequestWrapper.wrap(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpHost)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.client5.http.protocol</name>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.protocol.ClientProtocolException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.ClientProtocolException.ClientProtocolException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.protocol.HttpClientContext</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.AsynchronousValidationRequest(org.apache.hc.client5.http.impl.cache.AsynchronousValidator, org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.context</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.HttpClientContext.HttpClientContext()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.HttpClientContext.HttpClientContext(org.apache.hc.core5.http.protocol.HttpContext)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.HttpClientContext.create()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.HttpClientContext.getTargetHost()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.protocol.HttpClientContext.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.client5.http.utils</name>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.utils.DateUtils</name>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.consumeWarnDate()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.client5.http.utils.URIUtils</name>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.utils.URIUtils.resolve(java.net.URI, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.canonicalizeUri(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.client5.http.utils.URIUtils.rewriteURIForRoute(java.net.URI, org.apache.hc.client5.http.RouteInfo)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.annotation</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.annotation.GuardedBy</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator.count</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.annotation.Immutable</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HeaderConstants</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingHttpClients</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultHttpCacheEntrySerializer</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FailureCacheValue</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.HeapResourceFactory</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.annotation.NotThreadSafe</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.cache.InputLimit</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.annotation.ThreadSafe</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCacheStorage</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicIdGenerator</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.DefaultFailureCache</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.FileResource</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.http</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.Header</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.hasVariants()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasContentLengthHeader(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.isRevalidatable(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.addHeader(org.apache.hc.core5.http.Header)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getFirstHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLastHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.removeHeader(org.apache.hc.core5.http.Header)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeader(org.apache.hc.core5.http.Header)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setHeaders(org.apache.hc.core5.http.Header[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.Header.getElements()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.Header.getName()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.Header.getValue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.parseDate()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.addVariantWithEtag(java.lang.String, java.lang.String, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheEntry1xxWarnings(java.util.List, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getFullHeaderValue(org.apache.hc.core5.http.Header[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getAgeValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getContentLengthValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getExpirationDate(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getLastModifiedValue(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.WarningValue.getWarningValues(org.apache.hc.core5.http.Header)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HeaderElement</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.buildHeaderFromElements(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HeaderElement.getName()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.hasCacheControlDirective(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.mayCallBackend(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HeaderElement.getValue()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.getMaxAge(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.Header[], long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleWhileRevalidating(org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.explicitFreshnessRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.Header[]</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpEntity</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setEntity(org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.getContent()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.getContentEncoding()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.getContentLength()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.getContentType()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.isChunked()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpEntity.isStreaming()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.IOUtils.consume(org.apache.hc.core5.http.HttpEntity)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.retryRequestUnconditionally(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpHost</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpHost.toString()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpMessage</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.callBackend(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpMessage.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.hasCacheControlParameterFrom(org.apache.hc.core5.http.HttpMessage, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpMessage.getProtocolVersion()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpRequest</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidator.revalidateCacheEntry(org.apache.hc.client5.http.impl.cache.CachingExec, org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.BasicHttpCache$1(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.val$req</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.BasicHttpCache$2(org.apache.hc.client5.http.impl.cache.BasicHttpCache, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.val$req</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getResponseReader(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeInCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeNonVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.storeVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.shouldInvalidateHeadCacheEntry(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.allConditionalsMatch(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedLastModifiedValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedCacheEntryForGet(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isConditional(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isFreshEnough(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpRequest, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.flushEntriesInvalidatedByRequest(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getExistingCacheVariants(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.satisfyFromCache(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.shouldSendNotModifiedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.tryToUpdateVariantMap(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequestFromVariants(org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildUnconditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.getVariantCacheEntriesWithEtags(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.reuseVariantEntryFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.impl.cache.Variant)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestIsFatallyNonCompliant(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.SizeLimitedResponseReader(org.apache.hc.client5.http.cache.ResourceFactory, long, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.request</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.addHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.addHeader(org.apache.hc.core5.http.Header)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.containsHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasSupportedEtagValidator(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.getEntity()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.getFirstHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasUnsupportedConditionalHeaders(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getVariantKey(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheValidityPolicy.mayReturnStaleIfError(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.canCachedResponseBeUsed(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.getMaxStale(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.hasValidDateField(org.apache.hc.core5.http.HttpRequest, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.lastModifiedValidatorMatches(org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.add100ContinueHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestContainsNoCacheDirectiveWithFieldName(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.getProtocolVersion()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.getRequestLine()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.removeHeader(org.apache.hc.core5.http.Header)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.removeHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpRequest.setHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.stripOtherFreshnessDirectivesWithNoCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpResponse</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushLocationCacheEntry(java.net.URL, org.apache.hc.core5.http.HttpResponse, java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getUpdatedVariantEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse, org.apache.hc.client5.http.impl.cache.Variant, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleBackendResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, java.util.Date, java.util.Date, org.apache.hc.client5.http.methods.CloseableHttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.HttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.removeResponseTransferEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.ResponseProxyHandler(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.original</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader$1.SizeLimitedResponseReader$1(org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.addHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.addHeader(org.apache.hc.core5.http.Header)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getAllHeaders()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.mergeHeaders(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.removeCacheHeadersThatMatchResponse(java.util.List, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getEntity()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.consumeBody(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProxyHandler.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getFirstHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryAndResponseHaveDateHeader(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.entryDateHeaderNewerThenResponse(org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getContentLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.getLocationURL(java.net.URL, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseAndEntryEtagsDiffer(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.responseDateOlderThanEntryDate(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.transferEncodingIsPresent(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.alreadyHaveNewerCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidationResponseIsTooOld(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure206ContainsDateHeader(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.isNotStale(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isExplicitlyNonCacheable(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getProtocolVersion()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.getStatusLine()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.removeHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.removeResponseTransferEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.setEntity(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensureProtocolCompliance(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.setHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.setHeader(org.apache.hc.core5.http.Header)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpResponse.setHeaders(org.apache.hc.core5.http.Header[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.HttpVersion</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.HTTP_1_0</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.HTTP_1_1</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.getMajor()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.HttpVersion.getMinor()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.ProtocolException</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ConditionalRequestBuilder.buildConditionalRequest(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.ProtocolException.ProtocolException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.ProtocolVersion</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getProtocolVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getProtocolVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.ProtocolVersion, int)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.version</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.makeRequestCompliant(org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.from1_0Origin(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestVersionIsTooLow(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.requestProtocolGreaterThanAccepted(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.transferEncodingIsNotReturnedTo1_0Client(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.ProtocolVersion.getMajor()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.ProtocolVersion.getMinor()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.ProtocolVersion.getProtocol()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.RequestLine</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.RequestLine.getMethod()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.flushInvalidatedCacheEntriesFor(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestIsGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.requestShouldNotBeCached(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.responseShouldContainEntity(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedResponseSuitabilityChecker.isGet(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeakETagAndRange(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.requestMustNotHaveEntity(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.verifyOPTIONSRequestWithBodyHasContentType(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.RequestLine.getProtocolVersion()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheableRequestPolicy.isServableFromCache(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.RequestLine.getUri()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$1.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache$2.update(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.updateVariantCacheEntry(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.core5.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.getURI(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheKeyGenerator.isRelativeRequest(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.clientRequestsOurOptions(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheHit(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheMiss(org.apache.hc.core5.http.HttpHost, org.apache.hc.client5.http.methods.HttpRequestWrapper)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.doConsume()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.StatusLine</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getProtocolVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusLine()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.statusLine</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.cacheAndReturnResponse(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.client5.http.methods.CloseableHttpResponse, java.util.Date, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.doGetUpdatedParentEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getCode()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getStatusLine()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.setStatusLine(org.apache.hc.core5.http.StatusLine)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.statusLine</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.StatusLine.getProtocolVersion()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getProtocolVersion()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.StatusLine.getReasonPhrase()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getReasonPhrase()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.StatusLine.getStatusCode()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getStatusCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest.revalidateCacheEntry()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.isIncompleteResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheInvalidator.flushInvalidatedCacheEntries(org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.storeRequestIfModifiedSinceFor304Response(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getCode()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseCachingPolicy.isResponseCacheable(java.lang.String, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.backendResponseMustNotHaveBody(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensure304DoesNotContainExtraEntityHeaders(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.requestDidNotExpect100ContinueButResponseIsOne(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.TrailerSupplier</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.getTrailers()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.http.entity</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.entity.AbstractHttpEntity</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.entity.AbstractHttpEntity.AbstractHttpEntity()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.CombinedEntity(org.apache.hc.client5.http.cache.Resource, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.entity.AbstractHttpEntity.setContentType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.entity.ByteArrayEntity</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.entity.ByteArrayEntity.ByteArrayEntity(byte[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.entity.ContentType</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.entity.ContentType.APPLICATION_OCTET_STREAM</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.entity.ContentType.getMimeType()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.addContentTypeHeaderIfMissing(org.apache.hc.core5.http.HttpRequest)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.http.message</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.message.AbstractHttpMessage</name>
            <inbound type="class" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.AbstractHttpMessage()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.containsHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.containsHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.getAllHeaders()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getAllHeaders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.getFirstHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getFirstHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getHeaders(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.getLastHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.getLastHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.headerIterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.AbstractHttpMessage.headerIterator(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.headerIterator(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.message.BasicHeader</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.BasicHeader.BasicHeader(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.addMissingContentLengthHeader(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.HttpEntity)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.remove100ContinueHeaderIfExists(org.apache.hc.core5.http.HttpRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResponseProtocolCompliance.warningsWithNonMatchingWarnDatesAreRemoved(org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.message.BasicHttpResponse</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.BasicHttpCache.generateIncompleteResponseError(org.apache.hc.core5.http.HttpResponse, org.apache.hc.client5.http.cache.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateNotModifiedResponse(org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachedHttpResponseGenerator.generateResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheMiss(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.BasicHttpResponse.BasicHttpResponse(org.apache.hc.core5.http.StatusLine)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.SizeLimitedResponseReader.getReconstructedResponse()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.message.BasicStatusLine</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.BasicStatusLine.BasicStatusLine(org.apache.hc.core5.http.ProtocolVersion, int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.OptionsHttp11Response.OptionsHttp11Response()</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.RequestProtocolCompliance.getErrorForRequest(org.apache.hc.client5.http.impl.cache.RequestProtocolError)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.message.HeaderGroup</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.responseHeaders</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.HeaderGroup()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.addHeader(org.apache.hc.core5.http.Header)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.getAllHeaders()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.getFirstHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getFirstHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getRequestMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.getHeaders(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getHeaders(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.headerIterator()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.getAllHeaders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.message.HeaderGroup.setHeaders(org.apache.hc.core5.http.Header[])</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.http.protocol</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.protocol.BasicHttpContext</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.protocol.BasicHttpContext.BasicHttpContext()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.create()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.http.protocol.HttpContext</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.HttpCacheContext(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.adapt(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheContext.create()</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.execute(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateCachedResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateGatewayTimeout(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.getFatallyNoncompliantResponse(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleCacheHit(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.handleRevalidationFailure(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.negotiateResponseFromVariants(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.recordCacheUpdate(org.apache.hc.core5.http.protocol.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.revalidateCacheEntry(org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.client5.http.methods.HttpExecutionAware, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</inbound>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.unvalidatedCacheHit(org.apache.hc.client5.http.methods.HttpRequestWrapper, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.http.protocol.HttpContext.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.setResponseStatus(org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.client5.http.cache.CacheResponseStatus)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.hc.core5.util</name>
        <class confirmed="no">
            <name>org.apache.hc.core5.util.Args</name>
            <feature confirmed="no">
                <name>org.apache.hc.core5.util.Args.check(boolean, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntryUpdater.updateCacheEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry, java.util.Date, java.util.Date, org.apache.hc.core5.http.HttpResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.util.Args.notNegative(long, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.util.Args.notNull(java.lang.Object, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.cache.HttpCacheEntry.HttpCacheEntry(java.util.Date, java.util.Date, org.apache.hc.core5.http.StatusLine, org.apache.hc.core5.http.Header[], org.apache.hc.client5.http.cache.Resource, java.util.Map, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheConfig.copy(org.apache.hc.client5.http.impl.cache.CacheConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CacheEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.CachingExec(org.apache.hc.client5.http.impl.sync.ClientExecChain, org.apache.hc.client5.http.impl.cache.HttpCache, org.apache.hc.client5.http.impl.cache.CacheConfig, org.apache.hc.client5.http.impl.cache.AsynchronousValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CombinedEntity.writeTo(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.ExponentialBackOffSchedulingStrategy(java.util.concurrent.ScheduledExecutorService, long, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ExponentialBackOffSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ImmediateSchedulingStrategy.schedule(org.apache.hc.client5.http.impl.cache.AsynchronousValidationRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.getEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.putEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheEntry)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.removeEntry(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ManagedHttpCacheStorage.updateEntry(java.lang.String, org.apache.hc.client5.http.cache.HttpCacheUpdateCallback)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.Proxies.enhanceResponse(org.apache.hc.core5.http.HttpResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.ResourceReference.ResourceReference(org.apache.hc.client5.http.cache.HttpCacheEntry, java.lang.ref.ReferenceQueue)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.hc.core5.util.VersionInfo</name>
            <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            <feature confirmed="no">
                <name>org.apache.hc.core5.util.VersionInfo.getRelease()</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String, java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">org.apache.hc.client5.http.impl.cache.CachingExec.generateViaHeader(org.apache.hc.core5.http.HttpMessage)</inbound>
            </feature>
        </class>
    </package>
</dependencies>
